{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","toUTCString","slice","timerData","this","window","setInterval","setState","console","info","prevProps","props","name","debug","clearInterval","className","Component","App","hasClock","clockName","timerName","getRandomName","value","now","toString","document","addEventListener","event","preventDefault","ReactDOM","render","getElementById"],"mappings":"qMAUaA,EAAb,4MACEC,MAAyB,CACvBC,MAAM,IAAIC,MAAOC,cAAcC,OAAO,IAAK,IAF/C,EAKEC,UAAY,EALd,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,UAAYE,OAAOC,aAAY,WAClC,EAAKC,SAAS,CACZR,MAAM,IAAIC,MAAOC,cAAcC,OAAO,IAAK,KAG7CG,OAAOG,QAAQC,KAAK,EAAKX,MAAMC,QAC9B,OAdP,gCAiBE,SAAmBW,GACAN,KAAKO,MAAdC,OAEKF,EAAUE,MACrBP,OAAOG,QAAQK,MAAf,uBACkBH,EAAUE,KAD5B,eACuCR,KAAKO,MAAMC,SAtBxD,kCA2BE,WACEE,cAAcV,KAAKD,aA5BvB,oBA+BE,WACE,IAAQJ,EAASK,KAAKN,MAAdC,KACAa,EAASR,KAAKO,MAAdC,KAER,OACE,sBAAKG,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGH,IAGF,YAED,sBAAMG,UAAU,cAAhB,SACGhB,WA5CX,GAA2BiB,aCDdC,G,MAAb,4MACEnB,MAAyB,CACvBoB,UAAU,EACVC,UAAW,WAHf,EAMEC,UAAY,EANd,EA2BEC,cAAgB,WACd,IAAMC,EAAQtB,KAAKuB,MAAMC,WAAWtB,OAAO,GAE3C,MAAM,SAAN,OAAgBoB,IA9BpB,uDAQE,WAAqB,IAAD,OAClBG,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBACN,EAAKrB,SAAS,CAAEW,UAAU,OAG5BO,SAASC,iBAAiB,SAAS,WACjC,EAAKnB,SAAS,CAAEW,UAAU,OAG5Bd,KAAKgB,UAAYf,OAAOC,aAAY,WAClC,EAAKC,SAAS,CAAEY,UAAW,EAAKE,oBAC/B,QApBP,kCAuBE,WACEhB,OAAOS,cAAcV,KAAKgB,aAxB9B,oBAiCE,WACE,MAAgChB,KAAKN,MAA7BoB,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAElB,OACE,sBAAKJ,UAAU,MAAf,UACE,6CACCG,GAAY,cAAC,EAAD,CAAON,KAAMO,WAvClC,GAAyBH,cCNzBa,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.d8bc81c5.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  date: string,\n};\n\ntype Props = {\n  name: string,\n};\n\nexport class Clock extends Component<Props, State> {\n  state: Readonly<State> = {\n    date: new Date().toUTCString().slice(-12, -4),\n  };\n\n  timerData = 0;\n\n  componentDidMount() {\n    this.timerData = window.setInterval(() => {\n      this.setState({\n        date: new Date().toUTCString().slice(-12, -4),\n      });\n\n      window.console.info(this.state.date);\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props): void {\n    const { name } = this.props;\n\n    if (name !== prevProps.name) {\n      window.console.debug(\n        `Renamed from ${prevProps.name} to ${this.props.name}`,\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerData);\n  }\n\n  render() {\n    const { date } = this.state;\n    const { name } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {date}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport { Clock } from './Clock';\nimport './App.scss';\n\ntype State = {\n  hasClock: boolean;\n  clockName: string;\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerName = 0;\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', (event) => {\n      event.preventDefault();\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n\n    this.timerName = window.setInterval(() => {\n      this.setState({ clockName: this.getRandomName() });\n    }, 3300);\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerName);\n  }\n\n  getRandomName = () => {\n    const value = Date.now().toString().slice(-4);\n\n    return `Clock-${value}`;\n  };\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}